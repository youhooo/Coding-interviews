输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有的奇数位于数组的前半部分，所有的偶数位于位于数组的后半部分，并保证奇数和奇数，偶数和偶数之间的相对位置不变。
输入：
每个输入文件包含一组测试案例。
对于每个测试案例，第一行输入一个n，代表该数组中数字的个数。
接下来的一行输入n个整数。代表数组中的n个数。
输出：
对应每个测试案例，
输入一行n个数字，代表调整后的数组。注意，数字和数字之间用一个空格隔开，最后一个数字后面没有空格。
样例输入：
5
1 2 3 4 5
样例输出：
1 3 5 2 4
 */
public class Offer14 {
	public static void main(String[] args){
		Scanner sc= new Scanner(System.in);
		int n=sc.nextInt();
		int [] num=new int[n];
		int [] arr1=new int[n];
		int [] arr2=new int[n];
		int a1=0,a2=0;
		while(sc.hasNext()){
			for(int i=0;i<n;i++){
				num[i]=sc.nextInt();
				if(num[i]%2==0){
					arr2[a2++]=num[i];
				}else{
					arr1[a1++]=num[i];
				}
			}
			for(int i=0;i<a1;i++){
                if(i==0){
                    System.out.print(arr1[i]);   
                }else{
                    System.out.print(" ");
                    System.out.print(arr1[i]);
                }               
            }
            for(int i=0;i<a2;i++){
                System.out.print(" ");
                System.out.print(arr2[i]);                  
            }
		}
	}
}
